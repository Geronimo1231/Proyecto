{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, onMounted, onUnmounted, computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { ArrowPathIcon, MapPinIcon } from '@heroicons/vue/24/outline';\nimport L from 'leaflet';\nimport api from '../../services/api';\nimport { useToast } from 'vue-toastification';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport io from 'socket.io-client';\nexport default {\n  __name: 'Mapa',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const toast = useToast();\n    const map = ref(null);\n    const socket = ref(null);\n    const selectedVehicleId = ref('');\n    const showHistory = ref(false);\n    const locations = ref([]);\n    const vehicles = ref([]);\n    const markers = ref(new Map());\n    const routes = ref(new Map());\n    const filteredLocations = computed(() => {\n      if (!selectedVehicleId.value) {\n        return locations.value;\n      }\n      return locations.value.filter(location => location.vehiculo_id == selectedVehicleId.value);\n    });\n    const initMap = () => {\n      map.value = L.map('user-map').setView([19.432608, -99.133209], 10);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '© OpenStreetMap contributors'\n      }).addTo(map.value);\n    };\n    const initSocket = () => {\n      socket.value = io(import.meta.env.VITE_API_URL || 'http://localhost:8080');\n      socket.value.on('location-update', data => {\n        // Solo actualizar si es uno de mis vehículos\n        const isMyVehicle = vehicles.value.some(v => v.id === data.vehiculo_id);\n        if (isMyVehicle) {\n          updateVehicleLocation(data);\n        }\n      });\n    };\n    const fetchData = async () => {\n      try {\n        const [locationsRes, vehiclesRes] = await Promise.all([api.get('/user/ubicaciones'), api.get('/user/vehiculos')]);\n        locations.value = locationsRes.data.data;\n        vehicles.value = vehiclesRes.data.data;\n\n        // Si hay un vehículo específico en la URL, seleccionarlo\n        if (route.query.vehiculo) {\n          selectedVehicleId.value = route.query.vehiculo;\n        }\n        updateMapMarkers();\n      } catch (error) {\n        toast.error('Error al cargar las ubicaciones');\n      }\n    };\n    const updateMapMarkers = () => {\n      // Limpiar marcadores existentes\n      markers.value.forEach(marker => {\n        map.value.removeLayer(marker);\n      });\n      markers.value.clear();\n\n      // Agregar nuevos marcadores\n      filteredLocations.value.forEach(location => {\n        const marker = L.marker([location.latitud, location.longitud]).bindPopup(`\n        <div class=\"p-2\">\n          <h3 class=\"font-bold\">${location.vehiculo?.matricula}</h3>\n          <p>${location.vehiculo?.marca?.nombre} ${location.vehiculo?.modelo}</p>\n          <p><strong>Velocidad:</strong> ${location.velocidad} km/h</p>\n          <p><strong>Dirección:</strong> ${location.direccion}°</p>\n          <p><strong>Actualizado:</strong> ${formatDate(location.timestamp_gps)}</p>\n        </div>\n      `).addTo(map.value);\n        markers.value.set(location.vehiculo_id, marker);\n      });\n    };\n    const updateVehicleLocation = locationData => {\n      // Actualizar en la lista de ubicaciones\n      const index = locations.value.findIndex(loc => loc.vehiculo_id === locationData.vehiculo_id);\n      if (index !== -1) {\n        locations.value[index] = locationData;\n      } else {\n        locations.value.push(locationData);\n      }\n\n      // Actualizar marcador en el mapa\n      const marker = markers.value.get(locationData.vehiculo_id);\n      if (marker) {\n        marker.setLatLng([locationData.latitud, locationData.longitud]);\n        marker.getPopup().setContent(`\n      <div class=\"p-2\">\n        <h3 class=\"font-bold\">${locationData.vehiculo?.matricula}</h3>\n        <p>${locationData.vehiculo?.marca?.nombre} ${locationData.vehiculo?.modelo}</p>\n        <p><strong>Velocidad:</strong> ${locationData.velocidad} km/h</p>\n        <p><strong>Dirección:</strong> ${locationData.direccion}°</p>\n        <p><strong>Actualizado:</strong> ${formatDate(locationData.timestamp_gps)}</p>\n      </div>\n    `);\n      }\n    };\n    const refreshLocations = async () => {\n      await fetchData();\n      toast.success('Ubicaciones actualizadas');\n    };\n    const filterVehicle = () => {\n      updateMapMarkers();\n      centerMap();\n    };\n    const focusVehicle = location => {\n      map.value.setView([location.latitud, location.longitud], 15);\n      const marker = markers.value.get(location.vehiculo_id);\n      if (marker) {\n        marker.openPopup();\n      }\n    };\n    const centerMap = () => {\n      if (filteredLocations.value.length > 0) {\n        const group = new L.featureGroup(Array.from(markers.value.values()));\n        map.value.fitBounds(group.getBounds().pad(0.1));\n      } else {\n        map.value.setView([19.432608, -99.133209], 10);\n      }\n    };\n    const getSpeedClass = speed => {\n      if (speed === 0) return 'bg-gray-100 text-gray-800';\n      if (speed <= 30) return 'bg-green-100 text-green-800';\n      if (speed <= 60) return 'bg-yellow-100 text-yellow-800';\n      return 'bg-red-100 text-red-800';\n    };\n    const formatDate = date => {\n      return format(new Date(date), 'dd/MM/yyyy HH:mm:ss', {\n        locale: es\n      });\n    };\n    onMounted(async () => {\n      initMap();\n      initSocket();\n      await fetchData();\n    });\n    onUnmounted(() => {\n      if (socket.value) {\n        socket.value.disconnect();\n      }\n    });\n    const __returned__ = {\n      route,\n      toast,\n      map,\n      socket,\n      selectedVehicleId,\n      showHistory,\n      locations,\n      vehicles,\n      markers,\n      routes,\n      filteredLocations,\n      initMap,\n      initSocket,\n      fetchData,\n      updateMapMarkers,\n      updateVehicleLocation,\n      refreshLocations,\n      filterVehicle,\n      focusVehicle,\n      centerMap,\n      getSpeedClass,\n      formatDate,\n      ref,\n      onMounted,\n      onUnmounted,\n      computed,\n      get useRoute() {\n        return useRoute;\n      },\n      get ArrowPathIcon() {\n        return ArrowPathIcon;\n      },\n      get MapPinIcon() {\n        return MapPinIcon;\n      },\n      get L() {\n        return L;\n      },\n      get api() {\n        return api;\n      },\n      get useToast() {\n        return useToast;\n      },\n      get format() {\n        return format;\n      },\n      get es() {\n        return es;\n      },\n      get io() {\n        return io;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","computed","useRoute","ArrowPathIcon","MapPinIcon","L","api","useToast","format","es","io","route","toast","map","socket","selectedVehicleId","showHistory","locations","vehicles","markers","Map","routes","filteredLocations","value","filter","location","vehiculo_id","initMap","setView","tileLayer","attribution","addTo","initSocket","import","meta","env","VITE_API_URL","on","data","isMyVehicle","some","v","id","updateVehicleLocation","fetchData","locationsRes","vehiclesRes","Promise","all","get","query","vehiculo","updateMapMarkers","error","forEach","marker","removeLayer","clear","latitud","longitud","bindPopup","matricula","marca","nombre","modelo","velocidad","direccion","formatDate","timestamp_gps","set","locationData","index","findIndex","loc","push","setLatLng","getPopup","setContent","refreshLocations","success","filterVehicle","centerMap","focusVehicle","openPopup","length","group","featureGroup","Array","from","values","fitBounds","getBounds","pad","getSpeedClass","speed","date","Date","locale","disconnect"],"sources":["C:/Users/MG/Documents/Proyecto/Proyecto 2/frontend/src/views/user/Mapa.vue"],"sourcesContent":["<template>\n  <div class=\"space-y-6\">\n    <!-- Header -->\n    <div class=\"md:flex md:items-center md:justify-between\">\n      <div class=\"min-w-0 flex-1\">\n        <h2 class=\"text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-3xl sm:tracking-tight\">\n          Mapa GPS - Mis Vehículos\n        </h2>\n      </div>\n      <div class=\"mt-4 flex md:ml-4 md:mt-0 space-x-2\">\n        <button\n          @click=\"refreshLocations\"\n          class=\"inline-flex items-center rounded-md bg-blue-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-700\"\n        >\n          <ArrowPathIcon class=\"-ml-0.5 mr-1.5 h-5 w-5\" />\n          Actualizar\n        </button>\n      </div>\n    </div>\n\n    <!-- Vehicle Selector -->\n    <div class=\"bg-white shadow rounded-lg p-4\">\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div>\n          <label class=\"block text-sm font-medium text-gray-700 mb-1\">Seleccionar Vehículo</label>\n          <select\n            v-model=\"selectedVehicleId\"\n            @change=\"filterVehicle\"\n            class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n          >\n            <option value=\"\">Todos mis vehículos</option>\n            <option v-for=\"vehicle in vehicles\" :key=\"vehicle.id\" :value=\"vehicle.id\">\n              {{ vehicle.matricula }} - {{ vehicle.modelo }}\n            </option>\n          </select>\n        </div>\n        <div>\n          <label class=\"block text-sm font-medium text-gray-700 mb-1\">Mostrar Historial</label>\n          <div class=\"flex items-center\">\n            <input\n              id=\"show-history\"\n              v-model=\"showHistory\"\n              type=\"checkbox\"\n              class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n            />\n            <label for=\"show-history\" class=\"ml-2 block text-sm text-gray-900\">\n              Mostrar ruta histórica\n            </label>\n          </div>\n        </div>\n        <div class=\"flex items-end\">\n          <button\n            @click=\"centerMap\"\n            class=\"w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50\"\n          >\n            Centrar en mis vehículos\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Map Container -->\n    <div class=\"bg-white shadow rounded-lg overflow-hidden\">\n      <div id=\"user-map\" class=\"h-96 lg:h-[600px] w-full\"></div>\n    </div>\n\n    <!-- Vehicle Status -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      <div\n        v-for=\"location in filteredLocations\"\n        :key=\"location.vehiculo_id\"\n        class=\"bg-white shadow rounded-lg p-6\"\n      >\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-medium text-gray-900\">{{ location.vehiculo?.matricula }}</h3>\n          <span\n            class=\"inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium\"\n            :class=\"getSpeedClass(location.velocidad)\"\n          >\n            {{ location.velocidad }} km/h\n          </span>\n        </div>\n        \n        <div class=\"space-y-2\">\n          <div class=\"flex justify-between\">\n            <span class=\"text-sm text-gray-500\">Modelo:</span>\n            <span class=\"text-sm text-gray-900\">{{ location.vehiculo?.marca?.nombre }} {{ location.vehiculo?.modelo }}</span>\n          </div>\n          \n          <div class=\"flex justify-between\">\n            <span class=\"text-sm text-gray-500\">Latitud:</span>\n            <span class=\"text-sm text-gray-900\">{{ location.latitud.toFixed(6) }}</span>\n          </div>\n          \n          <div class=\"flex justify-between\">\n            <span class=\"text-sm text-gray-500\">Longitud:</span>\n            <span class=\"text-sm text-gray-900\">{{ location.longitud.toFixed(6) }}</span>\n          </div>\n          \n          <div class=\"flex justify-between\">\n            <span class=\"text-sm text-gray-500\">Dirección:</span>\n            <span class=\"text-sm text-gray-900\">{{ location.direccion }}°</span>\n          </div>\n          \n          <div class=\"flex justify-between\">\n            <span class=\"text-sm text-gray-500\">Última actualización:</span>\n            <span class=\"text-sm text-gray-900\">{{ formatDate(location.timestamp_gps) }}</span>\n          </div>\n        </div>\n        \n        <div class=\"mt-4\">\n          <button\n            @click=\"focusVehicle(location)\"\n            class=\"w-full bg-blue-600 text-white px-3 py-2 rounded text-sm hover:bg-blue-700\"\n          >\n            Centrar en Mapa\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- No vehicles message -->\n    <div v-if=\"filteredLocations.length === 0\" class=\"bg-white shadow rounded-lg p-6 text-center\">\n      <MapPinIcon class=\"mx-auto h-12 w-12 text-gray-400\" />\n      <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No hay ubicaciones disponibles</h3>\n      <p class=\"mt-1 text-sm text-gray-500\">\n        No se encontraron ubicaciones GPS para tus vehículos asignados.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, computed } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { ArrowPathIcon, MapPinIcon } from '@heroicons/vue/24/outline'\nimport L from 'leaflet'\nimport api from '../../services/api'\nimport { useToast } from 'vue-toastification'\nimport { format } from 'date-fns'\nimport { es } from 'date-fns/locale'\nimport io from 'socket.io-client'\n\nconst route = useRoute()\nconst toast = useToast()\n\nconst map = ref(null)\nconst socket = ref(null)\nconst selectedVehicleId = ref('')\nconst showHistory = ref(false)\n\nconst locations = ref([])\nconst vehicles = ref([])\nconst markers = ref(new Map())\nconst routes = ref(new Map())\n\nconst filteredLocations = computed(() => {\n  if (!selectedVehicleId.value) {\n    return locations.value\n  }\n  return locations.value.filter(location => location.vehiculo_id == selectedVehicleId.value)\n})\n\nconst initMap = () => {\n  map.value = L.map('user-map').setView([19.432608, -99.133209], 10)\n  \n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '© OpenStreetMap contributors'\n  }).addTo(map.value)\n}\n\nconst initSocket = () => {\n  socket.value = io(import.meta.env.VITE_API_URL || 'http://localhost:8080')\n  \n  socket.value.on('location-update', (data) => {\n    // Solo actualizar si es uno de mis vehículos\n    const isMyVehicle = vehicles.value.some(v => v.id === data.vehiculo_id)\n    if (isMyVehicle) {\n      updateVehicleLocation(data)\n    }\n  })\n}\n\nconst fetchData = async () => {\n  try {\n    const [locationsRes, vehiclesRes] = await Promise.all([\n      api.get('/user/ubicaciones'),\n      api.get('/user/vehiculos')\n    ])\n    \n    locations.value = locationsRes.data.data\n    vehicles.value = vehiclesRes.data.data\n    \n    // Si hay un vehículo específico en la URL, seleccionarlo\n    if (route.query.vehiculo) {\n      selectedVehicleId.value = route.query.vehiculo\n    }\n    \n    updateMapMarkers()\n  } catch (error) {\n    toast.error('Error al cargar las ubicaciones')\n  }\n}\n\nconst updateMapMarkers = () => {\n  // Limpiar marcadores existentes\n  markers.value.forEach(marker => {\n    map.value.removeLayer(marker)\n  })\n  markers.value.clear()\n\n  // Agregar nuevos marcadores\n  filteredLocations.value.forEach(location => {\n    const marker = L.marker([location.latitud, location.longitud])\n      .bindPopup(`\n        <div class=\"p-2\">\n          <h3 class=\"font-bold\">${location.vehiculo?.matricula}</h3>\n          <p>${location.vehiculo?.marca?.nombre} ${location.vehiculo?.modelo}</p>\n          <p><strong>Velocidad:</strong> ${location.velocidad} km/h</p>\n          <p><strong>Dirección:</strong> ${location.direccion}°</p>\n          <p><strong>Actualizado:</strong> ${formatDate(location.timestamp_gps)}</p>\n        </div>\n      `)\n      .addTo(map.value)\n    \n    markers.value.set(location.vehiculo_id, marker)\n  })\n}\n\nconst updateVehicleLocation = (locationData) => {\n  // Actualizar en la lista de ubicaciones\n  const index = locations.value.findIndex(loc => loc.vehiculo_id === locationData.vehiculo_id)\n  if (index !== -1) {\n    locations.value[index] = locationData\n  } else {\n    locations.value.push(locationData)\n  }\n  \n  // Actualizar marcador en el mapa\n  const marker = markers.value.get(locationData.vehiculo_id)\n  if (marker) {\n    marker.setLatLng([locationData.latitud, locationData.longitud])\n    marker.getPopup().setContent(`\n      <div class=\"p-2\">\n        <h3 class=\"font-bold\">${locationData.vehiculo?.matricula}</h3>\n        <p>${locationData.vehiculo?.marca?.nombre} ${locationData.vehiculo?.modelo}</p>\n        <p><strong>Velocidad:</strong> ${locationData.velocidad} km/h</p>\n        <p><strong>Dirección:</strong> ${locationData.direccion}°</p>\n        <p><strong>Actualizado:</strong> ${formatDate(locationData.timestamp_gps)}</p>\n      </div>\n    `)\n  }\n}\n\nconst refreshLocations = async () => {\n  await fetchData()\n  toast.success('Ubicaciones actualizadas')\n}\n\nconst filterVehicle = () => {\n  updateMapMarkers()\n  centerMap()\n}\n\nconst focusVehicle = (location) => {\n  map.value.setView([location.latitud, location.longitud], 15)\n  const marker = markers.value.get(location.vehiculo_id)\n  if (marker) {\n    marker.openPopup()\n  }\n}\n\nconst centerMap = () => {\n  if (filteredLocations.value.length > 0) {\n    const group = new L.featureGroup(Array.from(markers.value.values()))\n    map.value.fitBounds(group.getBounds().pad(0.1))\n  } else {\n    map.value.setView([19.432608, -99.133209], 10)\n  }\n}\n\nconst getSpeedClass = (speed) => {\n  if (speed === 0) return 'bg-gray-100 text-gray-800'\n  if (speed <= 30) return 'bg-green-100 text-green-800'\n  if (speed <= 60) return 'bg-yellow-100 text-yellow-800'\n  return 'bg-red-100 text-red-800'\n}\n\nconst formatDate = (date) => {\n  return format(new Date(date), 'dd/MM/yyyy HH:mm:ss', { locale: es })\n}\n\nonMounted(async () => {\n  initMap()\n  initSocket()\n  await fetchData()\n})\n\nonUnmounted(() => {\n  if (socket.value) {\n    socket.value.disconnect()\n  }\n})\n</script>\n\n<style>\n@import 'leaflet/dist/leaflet.css';\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}