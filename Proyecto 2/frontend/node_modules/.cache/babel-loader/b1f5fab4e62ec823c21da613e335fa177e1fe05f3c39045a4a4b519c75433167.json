{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { TruckIcon, XMarkIcon } from '@heroicons/vue/24/outline';\nimport api from '../../services/api';\nimport { useToast } from 'vue-toastification';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nexport default {\n  __name: 'Vehiculos',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const toast = useToast();\n    const vehiculos = ref([]);\n    const showDetailsModal = ref(false);\n    const selectedVehicle = ref(null);\n    const fetchVehicles = async () => {\n      try {\n        const response = await api.get('/user/vehicles');\n        vehiculos.value = response.data.data;\n      } catch (error) {\n        toast.error('Error al cargar los vehículos');\n      }\n    };\n    const viewVehicleDetails = vehiculo => {\n      selectedVehicle.value = vehiculo;\n      showDetailsModal.value = true;\n    };\n    const getStatusText = status => {\n      switch (status) {\n        case 'available':\n          return 'Disponible';\n        case 'assigned':\n          return 'Asignado';\n        case 'maintenance':\n          return 'Mantenimiento';\n        case 'out_of_service':\n          return 'Fuera de Servicio';\n        default:\n          return status;\n      }\n    };\n    const formatDate = date => {\n      if (!date) return 'No disponible';\n      return format(new Date(date), 'dd/MM/yyyy HH:mm', {\n        locale: es\n      });\n    };\n    onMounted(() => {\n      fetchVehicles();\n    });\n    const __returned__ = {\n      toast,\n      vehiculos,\n      showDetailsModal,\n      selectedVehicle,\n      fetchVehicles,\n      viewVehicleDetails,\n      getStatusText,\n      formatDate,\n      ref,\n      onMounted,\n      get TruckIcon() {\n        return TruckIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      },\n      get api() {\n        return api;\n      },\n      get useToast() {\n        return useToast;\n      },\n      get format() {\n        return format;\n      },\n      get es() {\n        return es;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","TruckIcon","XMarkIcon","api","useToast","format","es","toast","vehiculos","showDetailsModal","selectedVehicle","fetchVehicles","response","get","value","data","error","viewVehicleDetails","vehiculo","getStatusText","status","formatDate","date","Date","locale"],"sources":["C:/Users/MG/Documents/Proyecto/Proyecto 2/frontend/src/views/user/Vehiculos.vue"],"sourcesContent":["<template>\n  <div class=\"space-y-6\">\n    <!-- Header -->\n    <div class=\"md:flex md:items-center md:justify-between\">\n      <div class=\"min-w-0 flex-1\">\n        <h2 class=\"text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-3xl sm:tracking-tight\">\n          Mis Vehículos\n        </h2>\n        <p class=\"mt-1 text-sm text-gray-500\">\n          Vehículos asignados a tu cuenta\n        </p>\n      </div>\n    </div>\n\n    <!-- Vehicles Grid -->\n    <div v-if=\"vehiculos.length === 0\" class=\"text-center py-12\">\n      <TruckIcon class=\"mx-auto h-12 w-12 text-gray-400\" />\n      <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No tienes vehículos asignados</h3>\n      <p class=\"mt-1 text-sm text-gray-500\">\n        Contacta al administrador para que te asigne un vehículo.\n      </p>\n    </div>\n\n    <div v-else class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      <div\n        v-for=\"vehiculo in vehiculos\"\n        :key=\"vehiculo.id\"\n        class=\"bg-white shadow rounded-lg overflow-hidden hover:shadow-lg transition-shadow duration-200\"\n      >\n        <div class=\"aspect-w-16 aspect-h-9\">\n          <img\n            :src=\"vehiculo.image || '/placeholder.svg?height=200&width=300'\"\n            :alt=\"vehiculo.model\"\n            class=\"w-full h-48 object-cover\"\n          />\n        </div>\n        <div class=\"p-6\">\n          <div class=\"flex items-center justify-between mb-3\">\n            <h3 class=\"text-lg font-semibold text-gray-900\">{{ vehiculo.licensePlate }}</h3>\n            <span class=\"inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium bg-green-100 text-green-800\">\n              Asignado\n            </span>\n          </div>\n          \n          <div class=\"space-y-2 mb-4\">\n            <div class=\"flex justify-between\">\n              <span class=\"text-sm text-gray-500\">Marca:</span>\n              <span class=\"text-sm text-gray-900\">{{ vehiculo.brand }}</span>\n            </div>\n            <div class=\"flex justify-between\">\n              <span class=\"text-sm text-gray-500\">Modelo:</span>\n              <span class=\"text-sm text-gray-900\">{{ vehiculo.model }}</span>\n            </div>\n            <div class=\"flex justify-between\">\n              <span class=\"text-sm text-gray-500\">Año:</span>\n              <span class=\"text-sm text-gray-900\">{{ vehiculo.year }}</span>\n            </div>\n            <div class=\"flex justify-between\">\n              <span class=\"text-sm text-gray-500\">Tipo:</span>\n              <span class=\"text-sm text-gray-900\">{{ vehiculo.type }}</span>\n            </div>\n            <div class=\"flex justify-between\">\n              <span class=\"text-sm text-gray-500\">Color:</span>\n              <span class=\"text-sm text-gray-900\">{{ vehiculo.color || 'No especificado' }}</span>\n            </div>\n            <div class=\"flex justify-between\">\n              <span class=\"text-sm text-gray-500\">Kilometraje:</span>\n              <span class=\"text-sm text-gray-900\">{{ vehiculo.mileage?.toLocaleString() || 0 }} km</span>\n            </div>\n          </div>\n          \n          <div v-if=\"vehiculo.lastLocation\" class=\"mb-4 p-3 bg-blue-50 rounded-lg\">\n            <h4 class=\"text-xs font-medium text-blue-900 mb-2\">Última Ubicación GPS</h4>\n            <div class=\"space-y-1\">\n              <div class=\"flex justify-between\">\n                <span class=\"text-xs text-blue-700\">Latitud:</span>\n                <span class=\"text-xs text-blue-900\">{{ vehiculo.lastLocation.latitude?.toFixed(6) }}</span>\n              </div>\n              <div class=\"flex justify-between\">\n                <span class=\"text-xs text-blue-700\">Longitud:</span>\n                <span class=\"text-xs text-blue-900\">{{ vehiculo.lastLocation.longitude?.toFixed(6) }}</span>\n              </div>\n              <div class=\"flex justify-between\">\n                <span class=\"text-xs text-blue-700\">Velocidad:</span>\n                <span class=\"text-xs text-blue-900\">{{ vehiculo.lastLocation.speed || 0 }} km/h</span>\n              </div>\n              <div class=\"flex justify-between\">\n                <span class=\"text-xs text-blue-700\">Actualizado:</span>\n                <span class=\"text-xs text-blue-900\">{{ formatDate(vehiculo.lastLocation.gpsTimestamp) }}</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"flex space-x-2\">\n            <router-link\n              :to=\"`/user/mapa?vehiculo=${vehiculo.id}`\"\n              class=\"flex-1 bg-blue-600 text-white px-3 py-2 rounded text-sm text-center hover:bg-blue-700 transition duration-200\"\n            >\n              Ver en Mapa\n            </router-link>\n            <button\n              @click=\"viewVehicleDetails(vehiculo)\"\n              class=\"flex-1 bg-gray-600 text-white px-3 py-2 rounded text-sm hover:bg-gray-700 transition duration-200\"\n            >\n              Ver Detalles\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Vehicle Details Modal -->\n    <div v-if=\"showDetailsModal\" class=\"fixed inset-0 z-50 overflow-y-auto\">\n      <div class=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"></div>\n        \n        <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full\">\n          <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n            <div class=\"flex items-center justify-between mb-4\">\n              <h3 class=\"text-lg font-medium text-gray-900\">Detalles del Vehículo</h3>\n              <button\n                @click=\"showDetailsModal = false\"\n                class=\"text-gray-400 hover:text-gray-600\"\n              >\n                <XMarkIcon class=\"h-6 w-6\" />\n              </button>\n            </div>\n            \n            <div v-if=\"selectedVehicle\" class=\"space-y-6\">\n              <!-- Vehicle Image -->\n              <div class=\"text-center\">\n                <img\n                  :src=\"selectedVehicle.image || '/placeholder.svg?height=300&width=400'\"\n                  :alt=\"selectedVehicle.model\"\n                  class=\"mx-auto h-48 w-auto rounded-lg shadow-md\"\n                />\n              </div>\n              \n              <!-- Vehicle Information -->\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700\">Matrícula</label>\n                  <p class=\"text-sm text-gray-900 font-semibold\">{{ selectedVehicle.licensePlate }}</p>\n                </div>\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700\">Estado</label>\n                  <span class=\"inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium bg-green-100 text-green-800\">\n                    {{ getStatusText(selectedVehicle.status) }}\n                  </span>\n                </div>\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700\">Marca</label>\n                  <p class=\"text-sm text-gray-900\">{{ selectedVehicle.brand }}</p>\n                </div>\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700\">Modelo</label>\n                  <p class=\"text-sm text-gray-900\">{{ selectedVehicle.model }}</p>\n                </div>\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700\">Año</label>\n                  <p class=\"text-sm text-gray-900\">{{ selectedVehicle.year }}</p>\n                </div>\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700\">Tipo</label>\n                  <p class=\"text-sm text-gray-900\">{{ selectedVehicle.type }}</p>\n                </div>\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700\">Color</label>\n                  <p class=\"text-sm text-gray-900\">{{ selectedVehicle.color || 'No especificado' }}</p>\n                </div>\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700\">Kilometraje</label>\n                  <p class=\"text-sm text-gray-900\">{{ selectedVehicle.mileage?.toLocaleString() || 0 }} km</p>\n                </div>\n              </div>\n              \n              <!-- Technical Details -->\n              <div v-if=\"selectedVehicle.engineNumber || selectedVehicle.chassisNumber\" class=\"border-t pt-4\">\n                <h4 class=\"text-sm font-medium text-gray-900 mb-3\">Detalles Técnicos</h4>\n                <div class=\"grid grid-cols-2 gap-4\">\n                  <div v-if=\"selectedVehicle.engineNumber\">\n                    <label class=\"block text-sm font-medium text-gray-700\">Número de Motor</label>\n                    <p class=\"text-sm text-gray-900\">{{ selectedVehicle.engineNumber }}</p>\n                  </div>\n                  <div v-if=\"selectedVehicle.chassisNumber\">\n                    <label class=\"block text-sm font-medium text-gray-700\">Número de Chasis</label>\n                    <p class=\"text-sm text-gray-900\">{{ selectedVehicle.chassisNumber }}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- GPS Information -->\n              <div v-if=\"selectedVehicle.lastLocation\" class=\"border-t pt-4\">\n                <h4 class=\"text-sm font-medium text-gray-900 mb-3\">Información GPS</h4>\n                <div class=\"bg-blue-50 rounded-lg p-4\">\n                  <div class=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label class=\"block text-xs font-medium text-blue-700\">Latitud</label>\n                      <p class=\"text-sm text-blue-900\">{{ selectedVehicle.lastLocation.latitude?.toFixed(6) }}</p>\n                    </div>\n                    <div>\n                      <label class=\"block text-xs font-medium text-blue-700\">Longitud</label>\n                      <p class=\"text-sm text-blue-900\">{{ selectedVehicle.lastLocation.longitude?.toFixed(6) }}</p>\n                    </div>\n                    <div>\n                      <label class=\"block text-xs font-medium text-blue-700\">Velocidad</label>\n                      <p class=\"text-sm text-blue-900\">{{ selectedVehicle.lastLocation.speed || 0 }} km/h</p>\n                    </div>\n                    <div>\n                      <label class=\"block text-xs font-medium text-blue-700\">Dirección</label>\n                      <p class=\"text-sm text-blue-900\">{{ selectedVehicle.lastLocation.direction || 0 }}°</p>\n                    </div>\n                  </div>\n                  <div class=\"mt-3\">\n                    <label class=\"block text-xs font-medium text-blue-700\">Última Actualización</label>\n                    <p class=\"text-sm text-blue-900\">{{ formatDate(selectedVehicle.lastLocation.gpsTimestamp) }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\">\n            <router-link\n              v-if=\"selectedVehicle\"\n              :to=\"`/user/mapa?vehiculo=${selectedVehicle.id}`\"\n              class=\"w-full inline-flex justify-center rounded-md bg-blue-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-500 sm:ml-3 sm:w-auto\"\n            >\n              Ver en Mapa\n            </router-link>\n            <button\n              @click=\"showDetailsModal = false\"\n              class=\"mt-3 w-full inline-flex justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto\"\n            >\n              Cerrar\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { TruckIcon, XMarkIcon } from '@heroicons/vue/24/outline'\nimport api from '../../services/api'\nimport { useToast } from 'vue-toastification'\nimport { format } from 'date-fns'\nimport { es } from 'date-fns/locale'\n\nconst toast = useToast()\n\nconst vehiculos = ref([])\nconst showDetailsModal = ref(false)\nconst selectedVehicle = ref(null)\n\nconst fetchVehicles = async () => {\n  try {\n    const response = await api.get('/user/vehicles')\n    vehiculos.value = response.data.data\n  } catch (error) {\n    toast.error('Error al cargar los vehículos')\n  }\n}\n\nconst viewVehicleDetails = (vehiculo) => {\n  selectedVehicle.value = vehiculo\n  showDetailsModal.value = true\n}\n\nconst getStatusText = (status) => {\n  switch (status) {\n    case 'available': return 'Disponible'\n    case 'assigned': return 'Asignado'\n    case 'maintenance': return 'Mantenimiento'\n    case 'out_of_service': return 'Fuera de Servicio'\n    default: return status\n  }\n}\n\nconst formatDate = (date) => {\n  if (!date) return 'No disponible'\n  return format(new Date(date), 'dd/MM/yyyy HH:mm', { locale: es })\n}\n\nonMounted(() => {\n  fetchVehicles()\n})\n</script>\n"],"mappings":"AAoPA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,SAASC,SAAS,EAAEC,SAAS,QAAQ,2BAA0B;AAC/D,OAAOC,GAAG,MAAM,oBAAmB;AACnC,SAASC,QAAQ,QAAQ,oBAAmB;AAC5C,SAASC,MAAM,QAAQ,UAAS;AAChC,SAASC,EAAE,QAAQ,iBAAgB;;;;;;;IAEnC,MAAMC,KAAK,GAAGH,QAAQ,CAAC;IAEvB,MAAMI,SAAS,GAAGT,GAAG,CAAC,EAAE;IACxB,MAAMU,gBAAgB,GAAGV,GAAG,CAAC,KAAK;IAClC,MAAMW,eAAe,GAAGX,GAAG,CAAC,IAAI;IAEhC,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,gBAAgB;QAC/CL,SAAS,CAACM,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAG;MACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdT,KAAK,CAACS,KAAK,CAAC,+BAA+B;MAC7C;IACF;IAEA,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;MACvCR,eAAe,CAACI,KAAK,GAAGI,QAAO;MAC/BT,gBAAgB,CAACK,KAAK,GAAG,IAAG;IAC9B;IAEA,MAAMK,aAAa,GAAIC,MAAM,IAAK;MAChC,QAAQA,MAAM;QACZ,KAAK,WAAW;UAAE,OAAO,YAAW;QACpC,KAAK,UAAU;UAAE,OAAO,UAAS;QACjC,KAAK,aAAa;UAAE,OAAO,eAAc;QACzC,KAAK,gBAAgB;UAAE,OAAO,mBAAkB;QAChD;UAAS,OAAOA,MAAK;MACvB;IACF;IAEA,MAAMC,UAAU,GAAIC,IAAI,IAAK;MAC3B,IAAI,CAACA,IAAI,EAAE,OAAO,eAAc;MAChC,OAAOjB,MAAM,CAAC,IAAIkB,IAAI,CAACD,IAAI,CAAC,EAAE,kBAAkB,EAAE;QAAEE,MAAM,EAAElB;MAAG,CAAC;IAClE;IAEAN,SAAS,CAAC,MAAM;MACdW,aAAa,CAAC;IAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}