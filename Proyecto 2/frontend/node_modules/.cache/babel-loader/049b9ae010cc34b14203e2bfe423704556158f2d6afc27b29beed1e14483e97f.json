{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { TruckIcon, MapPinIcon } from '@heroicons/vue/24/outline';\nimport { useAuthStore } from '../../stores/auth';\nimport api from '../../services/api';\nimport { useToast } from 'vue-toastification';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nexport default {\n  __name: 'Perfil',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const authStore = useAuthStore();\n    const toast = useToast();\n    const profileLoading = ref(false);\n    const passwordLoading = ref(false);\n    const userStats = ref({});\n    const recentActivity = ref([]);\n    const profileForm = ref({\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      photo: ''\n    });\n    const passwordForm = ref({\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    });\n    const fetchUserData = async () => {\n      try {\n        const [statsRes, activityRes] = await Promise.all([api.get('/user/stats'), api.get('/user/activity?limit=5')]);\n        userStats.value = statsRes.data.data;\n        recentActivity.value = activityRes.data.data;\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    const updateProfile = async () => {\n      try {\n        profileLoading.value = true;\n        const response = await api.put('/user/profile', profileForm.value);\n        if (response.data.success) {\n          // Actualizar datos del usuario en el store\n          authStore.user = {\n            ...authStore.user,\n            ...response.data.user\n          };\n          toast.success('Perfil actualizado correctamente');\n        }\n      } catch (error) {\n        toast.error(error.response?.data?.message || 'Error al actualizar el perfil');\n      } finally {\n        profileLoading.value = false;\n      }\n    };\n    const changePassword = async () => {\n      if (passwordForm.value.newPassword !== passwordForm.value.confirmPassword) {\n        toast.error('Las contraseñas no coinciden');\n        return;\n      }\n      try {\n        passwordLoading.value = true;\n        await api.put('/user/change-password', {\n          currentPassword: passwordForm.value.currentPassword,\n          newPassword: passwordForm.value.newPassword\n        });\n        toast.success('Contraseña cambiada correctamente');\n\n        // Limpiar formulario\n        passwordForm.value = {\n          currentPassword: '',\n          newPassword: '',\n          confirmPassword: ''\n        };\n      } catch (error) {\n        toast.error(error.response?.data?.message || 'Error al cambiar la contraseña');\n      } finally {\n        passwordLoading.value = false;\n      }\n    };\n    const handlePhotoChange = async event => {\n      const file = event.target.files[0];\n      if (!file) return;\n      const formData = new FormData();\n      formData.append('photo', file);\n      try {\n        const response = await api.post('/user/upload-photo', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.data.success) {\n          profileForm.value.photo = response.data.photoUrl;\n          authStore.user.photo = response.data.photoUrl;\n          toast.success('Foto actualizada correctamente');\n        }\n      } catch (error) {\n        toast.error('Error al subir la foto');\n      }\n    };\n    const getRoleText = role => {\n      switch (role) {\n        case 'GlobalAdmin':\n          return 'Administrador Global';\n        case 'Admin':\n          return 'Administrador';\n        case 'User':\n          return 'Usuario';\n        default:\n          return role;\n      }\n    };\n    const formatDate = date => {\n      if (!date) return 'No disponible';\n      return format(new Date(date), 'dd/MM/yyyy HH:mm', {\n        locale: es\n      });\n    };\n    onMounted(() => {\n      // Inicializar formulario con datos del usuario\n      if (authStore.user) {\n        profileForm.value = {\n          firstName: authStore.user.firstName || '',\n          lastName: authStore.user.lastName || '',\n          email: authStore.user.email || '',\n          phone: authStore.user.phone || '',\n          photo: authStore.user.photo || ''\n        };\n      }\n      fetchUserData();\n    });\n    const __returned__ = {\n      authStore,\n      toast,\n      profileLoading,\n      passwordLoading,\n      userStats,\n      recentActivity,\n      profileForm,\n      passwordForm,\n      fetchUserData,\n      updateProfile,\n      changePassword,\n      handlePhotoChange,\n      getRoleText,\n      formatDate,\n      ref,\n      onMounted,\n      get TruckIcon() {\n        return TruckIcon;\n      },\n      get MapPinIcon() {\n        return MapPinIcon;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get api() {\n        return api;\n      },\n      get useToast() {\n        return useToast;\n      },\n      get format() {\n        return format;\n      },\n      get es() {\n        return es;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","TruckIcon","MapPinIcon","useAuthStore","api","useToast","format","es","authStore","toast","profileLoading","passwordLoading","userStats","recentActivity","profileForm","firstName","lastName","email","phone","photo","passwordForm","currentPassword","newPassword","confirmPassword","fetchUserData","statsRes","activityRes","Promise","all","get","value","data","error","console","updateProfile","response","put","success","user","message","changePassword","handlePhotoChange","event","file","target","files","formData","FormData","append","post","headers","photoUrl","getRoleText","role","formatDate","date","Date","locale"],"sources":["C:/Users/MG/Documents/Proyecto/Proyecto 2/frontend/src/views/user/Perfil.vue"],"sourcesContent":["<template>\n  <div class=\"space-y-6\">\n    <!-- Header -->\n    <div class=\"md:flex md:items-center md:justify-between\">\n      <div class=\"min-w-0 flex-1\">\n        <h2 class=\"text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-3xl sm:tracking-tight\">\n          Mi Perfil\n        </h2>\n        <p class=\"mt-1 text-sm text-gray-500\">\n          Gestiona tu información personal y configuración de cuenta\n        </p>\n      </div>\n    </div>\n\n    <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n      <!-- Profile Information -->\n      <div class=\"lg:col-span-2\">\n        <div class=\"bg-white shadow rounded-lg\">\n          <div class=\"px-4 py-5 sm:p-6\">\n            <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Información Personal</h3>\n            \n            <form @submit.prevent=\"updateProfile\" class=\"space-y-6\">\n              <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700 mb-1\">Nombre *</label>\n                  <input\n                    v-model=\"profileForm.firstName\"\n                    type=\"text\"\n                    required\n                    class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  />\n                </div>\n                \n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700 mb-1\">Apellido *</label>\n                  <input\n                    v-model=\"profileForm.lastName\"\n                    type=\"text\"\n                    required\n                    class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-1\">Email *</label>\n                <input\n                  v-model=\"profileForm.email\"\n                  type=\"email\"\n                  required\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                />\n              </div>\n              \n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-1\">Teléfono</label>\n                <input\n                  v-model=\"profileForm.phone\"\n                  type=\"tel\"\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                />\n              </div>\n              \n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-1\">Foto de Perfil</label>\n                <div class=\"mt-1 flex items-center space-x-4\">\n                  <img\n                    class=\"h-12 w-12 rounded-full\"\n                    :src=\"profileForm.photo || '/placeholder.svg?height=48&width=48'\"\n                    :alt=\"profileForm.firstName\"\n                  />\n                  <input\n                    ref=\"photoInput\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    @change=\"handlePhotoChange\"\n                    class=\"hidden\"\n                  />\n                  <button\n                    type=\"button\"\n                    @click=\"$refs.photoInput.click()\"\n                    class=\"bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                  >\n                    Cambiar foto\n                  </button>\n                </div>\n              </div>\n              \n              <div class=\"flex justify-end\">\n                <button\n                  type=\"submit\"\n                  :disabled=\"profileLoading\"\n                  class=\"bg-blue-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\n                >\n                  {{ profileLoading ? 'Guardando...' : 'Guardar Cambios' }}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n\n        <!-- Change Password -->\n        <div class=\"bg-white shadow rounded-lg mt-6\">\n          <div class=\"px-4 py-5 sm:p-6\">\n            <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Cambiar Contraseña</h3>\n            \n            <form @submit.prevent=\"changePassword\" class=\"space-y-6\">\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-1\">Contraseña Actual *</label>\n                <input\n                  v-model=\"passwordForm.currentPassword\"\n                  type=\"password\"\n                  required\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                />\n              </div>\n              \n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-1\">Nueva Contraseña *</label>\n                <input\n                  v-model=\"passwordForm.newPassword\"\n                  type=\"password\"\n                  required\n                  minlength=\"8\"\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                />\n                <p class=\"mt-1 text-xs text-gray-500\">\n                  Mínimo 8 caracteres, incluir mayúscula, minúscula, número y carácter especial\n                </p>\n              </div>\n              \n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-1\">Confirmar Nueva Contraseña *</label>\n                <input\n                  v-model=\"passwordForm.confirmPassword\"\n                  type=\"password\"\n                  required\n                  minlength=\"8\"\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                />\n              </div>\n              \n              <div class=\"flex justify-end\">\n                <button\n                  type=\"submit\"\n                  :disabled=\"passwordLoading\"\n                  class=\"bg-red-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50\"\n                >\n                  {{ passwordLoading ? 'Cambiando...' : 'Cambiar Contraseña' }}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <!-- Profile Summary -->\n      <div class=\"space-y-6\">\n        <!-- Account Info -->\n        <div class=\"bg-white shadow rounded-lg\">\n          <div class=\"px-4 py-5 sm:p-6\">\n            <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Información de Cuenta</h3>\n            \n            <dl class=\"space-y-3\">\n              <div>\n                <dt class=\"text-sm font-medium text-gray-500\">Rol</dt>\n                <dd class=\"text-sm text-gray-900\">\n                  <span class=\"inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium bg-green-100 text-green-800\">\n                    {{ getRoleText(authStore.user?.role) }}\n                  </span>\n                </dd>\n              </div>\n              \n              <div>\n                <dt class=\"text-sm font-medium text-gray-500\">Fecha de Registro</dt>\n                <dd class=\"text-sm text-gray-900\">{{ formatDate(authStore.user?.createdAt) }}</dd>\n              </div>\n              \n              <div>\n                <dt class=\"text-sm font-medium text-gray-500\">Última Actualización</dt>\n                <dd class=\"text-sm text-gray-900\">{{ formatDate(authStore.user?.updatedAt) }}</dd>\n              </div>\n            </dl>\n          </div>\n        </div>\n\n        <!-- Vehicle Summary -->\n        <div class=\"bg-white shadow rounded-lg\">\n          <div class=\"px-4 py-5 sm:p-6\">\n            <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Mis Vehículos</h3>\n            \n            <div class=\"text-center\">\n              <TruckIcon class=\"mx-auto h-12 w-12 text-gray-400\" />\n              <div class=\"mt-2\">\n                <p class=\"text-2xl font-semibold text-gray-900\">{{ userStats.assignedVehicles || 0 }}</p>\n                <p class=\"text-sm text-gray-500\">Vehículos asignados</p>\n              </div>\n            </div>\n            \n            <div class=\"mt-4\">\n              <router-link\n                to=\"/user/vehiculos\"\n                class=\"w-full bg-blue-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-blue-700\"\n              >\n                Ver Mis Vehículos\n              </router-link>\n            </div>\n          </div>\n        </div>\n\n        <!-- Activity Summary -->\n        <div class=\"bg-white shadow rounded-lg\">\n          <div class=\"px-4 py-5 sm:p-6\">\n            <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Actividad Reciente</h3>\n            \n            <div class=\"space-y-3\">\n              <div v-for=\"activity in recentActivity.slice(0, 3)\" :key=\"activity.id\" class=\"flex items-center space-x-3\">\n                <div class=\"flex-shrink-0\">\n                  <div class=\"h-8 w-8 rounded-full bg-blue-100 flex items-center justify-center\">\n                    <MapPinIcon class=\"h-4 w-4 text-blue-600\" />\n                  </div>\n                </div>\n                <div class=\"min-w-0 flex-1\">\n                  <p class=\"text-xs text-gray-500\">{{ activity.description }}</p>\n                  <p class=\"text-xs text-gray-400\">{{ formatDate(activity.createdAt) }}</p>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"mt-4\">\n              <router-link\n                to=\"/user/dashboard\"\n                class=\"text-sm text-blue-600 hover:text-blue-500\"\n              >\n                Ver toda la actividad →\n              </router-link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { TruckIcon, MapPinIcon } from '@heroicons/vue/24/outline'\nimport { useAuthStore } from '../../stores/auth'\nimport api from '../../services/api'\nimport { useToast } from 'vue-toastification'\nimport { format } from 'date-fns'\nimport { es } from 'date-fns/locale'\n\nconst authStore = useAuthStore()\nconst toast = useToast()\n\nconst profileLoading = ref(false)\nconst passwordLoading = ref(false)\nconst userStats = ref({})\nconst recentActivity = ref([])\n\nconst profileForm = ref({\n  firstName: '',\n  lastName: '',\n  email: '',\n  phone: '',\n  photo: ''\n})\n\nconst passwordForm = ref({\n  currentPassword: '',\n  newPassword: '',\n  confirmPassword: ''\n})\n\nconst fetchUserData = async () => {\n  try {\n    const [statsRes, activityRes] = await Promise.all([\n      api.get('/user/stats'),\n      api.get('/user/activity?limit=5')\n    ])\n    \n    userStats.value = statsRes.data.data\n    recentActivity.value = activityRes.data.data\n  } catch (error) {\n    console.error('Error fetching user data:', error)\n  }\n}\n\nconst updateProfile = async () => {\n  try {\n    profileLoading.value = true\n    const response = await api.put('/user/profile', profileForm.value)\n    \n    if (response.data.success) {\n      // Actualizar datos del usuario en el store\n      authStore.user = { ...authStore.user, ...response.data.user }\n      toast.success('Perfil actualizado correctamente')\n    }\n  } catch (error) {\n    toast.error(error.response?.data?.message || 'Error al actualizar el perfil')\n  } finally {\n    profileLoading.value = false\n  }\n}\n\nconst changePassword = async () => {\n  if (passwordForm.value.newPassword !== passwordForm.value.confirmPassword) {\n    toast.error('Las contraseñas no coinciden')\n    return\n  }\n\n  try {\n    passwordLoading.value = true\n    await api.put('/user/change-password', {\n      currentPassword: passwordForm.value.currentPassword,\n      newPassword: passwordForm.value.newPassword\n    })\n    \n    toast.success('Contraseña cambiada correctamente')\n    \n    // Limpiar formulario\n    passwordForm.value = {\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    }\n  } catch (error) {\n    toast.error(error.response?.data?.message || 'Error al cambiar la contraseña')\n  } finally {\n    passwordLoading.value = false\n  }\n}\n\nconst handlePhotoChange = async (event) => {\n  const file = event.target.files[0]\n  if (!file) return\n\n  const formData = new FormData()\n  formData.append('photo', file)\n\n  try {\n    const response = await api.post('/user/upload-photo', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    \n    if (response.data.success) {\n      profileForm.value.photo = response.data.photoUrl\n      authStore.user.photo = response.data.photoUrl\n      toast.success('Foto actualizada correctamente')\n    }\n  } catch (error) {\n    toast.error('Error al subir la foto')\n  }\n}\n\nconst getRoleText = (role) => {\n  switch (role) {\n    case 'GlobalAdmin': return 'Administrador Global'\n    case 'Admin': return 'Administrador'\n    case 'User': return 'Usuario'\n    default: return role\n  }\n}\n\nconst formatDate = (date) => {\n  if (!date) return 'No disponible'\n  return format(new Date(date), 'dd/MM/yyyy HH:mm', { locale: es })\n}\n\nonMounted(() => {\n  // Inicializar formulario con datos del usuario\n  if (authStore.user) {\n    profileForm.value = {\n      firstName: authStore.user.firstName || '',\n      lastName: authStore.user.lastName || '',\n      email: authStore.user.email || '',\n      phone: authStore.user.phone || '',\n      photo: authStore.user.photo || ''\n    }\n  }\n  \n  fetchUserData()\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}