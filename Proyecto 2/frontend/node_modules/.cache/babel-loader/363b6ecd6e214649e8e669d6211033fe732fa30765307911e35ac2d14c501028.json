{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport { useAuthStore } from \"../stores/auth\";\n\n// Vistas globales\nimport Home from \"../views/Home.vue\";\nimport Login from \"../views/Login.vue\";\n\n// Vistas de administrador\nimport AdminLayout from \"../layouts/AdminLayout.vue\";\nimport AdminDashboard from \"../views/admin/Dashboard.vue\";\nimport AdminAsignaciones from \"../views/admin/Asignaciones.vue\";\nimport AdminMapa from \"../views/admin/Mapa.vue\";\nimport AdminRegistrar from \"../views/admin/Registrar.vue\";\nimport AdminUsuarios from \"../views/admin/Usuarios.vue\";\nimport AdminVehiculos from \"../views/admin/Vehiculos.vue\";\n\n// Vistas de usuario\nimport UserLayout from \"../layouts/UserLayout.vue\";\nimport UserDashboard from \"../views/user/Dashboard.vue\";\nimport UserMapa from \"../views/user/Mapa.vue\";\nimport UserPerfil from \"../views/user/Perfil.vue\";\nimport UserVehiculos from \"../views/user/Vehiculos.vue\";\nconst routes = [{\n  path: \"/\",\n  name: \"Home\",\n  component: Home,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: \"/login\",\n  name: \"Login\",\n  component: Login,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: \"/admin\",\n  component: AdminLayout,\n  meta: {\n    requiresAuth: true,\n    requiresRole: \"admin\"\n  },\n  children: [{\n    path: \"\",\n    redirect: \"/admin/dashboard\"\n  }, {\n    path: \"dashboard\",\n    name: \"AdminDashboard\",\n    component: AdminDashboard\n  }, {\n    path: \"asignaciones\",\n    name: \"AdminAsignaciones\",\n    component: AdminAsignaciones\n  }, {\n    path: \"mapa\",\n    name: \"AdminMapa\",\n    component: AdminMapa\n  }, {\n    path: \"registrar\",\n    name: \"AdminRegistrar\",\n    component: AdminRegistrar\n  }, {\n    path: \"usuarios\",\n    name: \"AdminUsuarios\",\n    component: AdminUsuarios\n  }, {\n    path: \"vehiculos\",\n    name: \"AdminVehiculos\",\n    component: AdminVehiculos\n  }]\n}, {\n  path: \"/user\",\n  component: UserLayout,\n  meta: {\n    requiresAuth: true,\n    requiresRole: \"usuario\"\n  },\n  children: [{\n    path: \"\",\n    redirect: \"/user/dashboard\"\n  }, {\n    path: \"dashboard\",\n    name: \"UserDashboard\",\n    component: UserDashboard\n  }, {\n    path: \"mapa\",\n    name: \"UserMapa\",\n    component: UserMapa\n  }, {\n    path: \"perfil\",\n    name: \"UserPerfil\",\n    component: UserPerfil\n  }, {\n    path: \"vehiculos\",\n    name: \"UserVehiculos\",\n    component: UserVehiculos\n  }]\n}, {\n  path: \"/:pathMatch(.*)*\",\n  redirect: \"/\"\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach(async (to, from, next) => {\n  const authStore = useAuthStore();\n  if (to.meta.requiresAuth) {\n    if (!authStore.isAuthenticated) {\n      next(\"/login\");\n      return;\n    }\n    if (to.meta.requiresRole && authStore.user?.rol !== to.meta.requiresRole) {\n      // Redirigir según el rol del usuario\n      if (authStore.user?.rol === \"admin\") {\n        next(\"/admin/dashboard\");\n      } else {\n        next(\"/user/dashboard\");\n      }\n      return;\n    }\n  }\n\n  // Si está autenticado y trata de ir a login, redirigir al dashboard correspondiente\n  if (to.name === \"Login\" && authStore.isAuthenticated) {\n    if (authStore.user?.rol === \"admin\") {\n      next(\"/admin/dashboard\");\n    } else {\n      next(\"/user/dashboard\");\n    }\n    return;\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","useAuthStore","Home","Login","AdminLayout","AdminDashboard","AdminAsignaciones","AdminMapa","AdminRegistrar","AdminUsuarios","AdminVehiculos","UserLayout","UserDashboard","UserMapa","UserPerfil","UserVehiculos","routes","path","name","component","meta","requiresAuth","requiresRole","children","redirect","router","history","beforeEach","to","from","next","authStore","isAuthenticated","user","rol"],"sources":["C:/Users/MG/Documents/Proyecto/Proyecto 2/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\"\r\nimport { useAuthStore } from \"../stores/auth\"\r\n\r\n// Vistas globales\r\nimport Home from \"../views/Home.vue\"\r\nimport Login from \"../views/Login.vue\"\r\n\r\n// Vistas de administrador\r\nimport AdminLayout from \"../layouts/AdminLayout.vue\"\r\nimport AdminDashboard from \"../views/admin/Dashboard.vue\"\r\nimport AdminAsignaciones from \"../views/admin/Asignaciones.vue\"\r\nimport AdminMapa from \"../views/admin/Mapa.vue\"\r\nimport AdminRegistrar from \"../views/admin/Registrar.vue\"\r\nimport AdminUsuarios from \"../views/admin/Usuarios.vue\"\r\nimport AdminVehiculos from \"../views/admin/Vehiculos.vue\"\r\n\r\n// Vistas de usuario\r\nimport UserLayout from \"../layouts/UserLayout.vue\"\r\nimport UserDashboard from \"../views/user/Dashboard.vue\"\r\nimport UserMapa from \"../views/user/Mapa.vue\"\r\nimport UserPerfil from \"../views/user/Perfil.vue\"\r\nimport UserVehiculos from \"../views/user/Vehiculos.vue\"\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: Home,\r\n    meta: { requiresAuth: false },\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    component: Login,\r\n    meta: { requiresAuth: false },\r\n  },\r\n  {\r\n    path: \"/admin\",\r\n    component: AdminLayout,\r\n    meta: { requiresAuth: true, requiresRole: \"admin\" },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirect: \"/admin/dashboard\",\r\n      },\r\n      {\r\n        path: \"dashboard\",\r\n        name: \"AdminDashboard\",\r\n        component: AdminDashboard,\r\n      },\r\n      {\r\n        path: \"asignaciones\",\r\n        name: \"AdminAsignaciones\",\r\n        component: AdminAsignaciones,\r\n      },\r\n      {\r\n        path: \"mapa\",\r\n        name: \"AdminMapa\",\r\n        component: AdminMapa,\r\n      },\r\n      {\r\n        path: \"registrar\",\r\n        name: \"AdminRegistrar\",\r\n        component: AdminRegistrar,\r\n      },\r\n      {\r\n        path: \"usuarios\",\r\n        name: \"AdminUsuarios\",\r\n        component: AdminUsuarios,\r\n      },\r\n      {\r\n        path: \"vehiculos\",\r\n        name: \"AdminVehiculos\",\r\n        component: AdminVehiculos,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/user\",\r\n    component: UserLayout,\r\n    meta: { requiresAuth: true, requiresRole: \"usuario\" },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirect: \"/user/dashboard\",\r\n      },\r\n      {\r\n        path: \"dashboard\",\r\n        name: \"UserDashboard\",\r\n        component: UserDashboard,\r\n      },\r\n      {\r\n        path: \"mapa\",\r\n        name: \"UserMapa\",\r\n        component: UserMapa,\r\n      },\r\n      {\r\n        path: \"perfil\",\r\n        name: \"UserPerfil\",\r\n        component: UserPerfil,\r\n      },\r\n      {\r\n        path: \"vehiculos\",\r\n        name: \"UserVehiculos\",\r\n        component: UserVehiculos,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/:pathMatch(.*)*\",\r\n    redirect: \"/\",\r\n  },\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n})\r\n\r\nrouter.beforeEach(async (to, from, next) => {\r\n  const authStore = useAuthStore()\r\n\r\n  if (to.meta.requiresAuth) {\r\n    if (!authStore.isAuthenticated) {\r\n      next(\"/login\")\r\n      return\r\n    }\r\n\r\n    if (to.meta.requiresRole && authStore.user?.rol !== to.meta.requiresRole) {\r\n      // Redirigir según el rol del usuario\r\n      if (authStore.user?.rol === \"admin\") {\r\n        next(\"/admin/dashboard\")\r\n      } else {\r\n        next(\"/user/dashboard\")\r\n      }\r\n      return\r\n    }\r\n  }\r\n\r\n  // Si está autenticado y trata de ir a login, redirigir al dashboard correspondiente\r\n  if (to.name === \"Login\" && authStore.isAuthenticated) {\r\n    if (authStore.user?.rol === \"admin\") {\r\n      next(\"/admin/dashboard\")\r\n    } else {\r\n      next(\"/user/dashboard\")\r\n    }\r\n    return\r\n  }\r\n\r\n  next()\r\n})\r\n\r\nexport default router\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}